[{"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\index.js":"1","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\reportWebVitals.js":"2","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\App.js":"3","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Router\\Routes.js":"4","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\NavBar\\NavBar.js":"5","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Home\\Home.js":"6","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Expert\\Expert.js":"7","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\About\\About.js":"8","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Buzz\\Buzz.js":"9","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Experience\\Experience.js":"10","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Visit\\Visit.js":"11","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Footer\\Footer.js":"12","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\ScheduleVisit\\ScheduleVisit.js":"13","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Tooth_mouseover\\ToothMouseover.js":"14","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\testing\\Testing.js":"15","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Heading_mouseover\\HeadingMouseover.js":"16","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Heading_mouseover_mobile\\HeadingMouseover_mobile.js":"17","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Tooth_mouseover_mobile\\ToothMouseover_mobile.js":"18","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\servicesPage\\services.js":"19","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\servicesPage\\header\\header.js":"20","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Carousel_show2\\CarouselShow2.js":"21"},{"size":1036,"mtime":1607930062913,"results":"22","hashOfConfig":"23"},{"size":375,"mtime":1607929325041,"results":"24","hashOfConfig":"23"},{"size":280,"mtime":1608025235207,"results":"25","hashOfConfig":"23"},{"size":987,"mtime":1608100541003,"results":"26","hashOfConfig":"23"},{"size":2919,"mtime":1608103608733,"results":"27","hashOfConfig":"23"},{"size":2268,"mtime":1608028534163,"results":"28","hashOfConfig":"23"},{"size":148,"mtime":1607929325032,"results":"29","hashOfConfig":"23"},{"size":146,"mtime":1607929325027,"results":"30","hashOfConfig":"23"},{"size":144,"mtime":1607929325029,"results":"31","hashOfConfig":"23"},{"size":3069,"mtime":1608024650778,"results":"32","hashOfConfig":"23"},{"size":6645,"mtime":1608099827997,"results":"33","hashOfConfig":"23"},{"size":2159,"mtime":1608024650769,"results":"34","hashOfConfig":"23"},{"size":2667,"mtime":1608024650775,"results":"35","hashOfConfig":"23"},{"size":3695,"mtime":1608029410718,"results":"36","hashOfConfig":"23"},{"size":860,"mtime":1608024657617,"results":"37","hashOfConfig":"23"},{"size":3776,"mtime":1608029390350,"results":"38","hashOfConfig":"23"},{"size":3890,"mtime":1608026770919,"results":"39","hashOfConfig":"23"},{"size":3794,"mtime":1608029419182,"results":"40","hashOfConfig":"23"},{"size":2319,"mtime":1608113683729,"results":"41","hashOfConfig":"23"},{"size":247,"mtime":1608101607411,"results":"42","hashOfConfig":"23"},{"size":1946,"mtime":1608113658952,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"bqw7gg",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\index.js",[],["94","95"],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\reportWebVitals.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\App.js",["96"],"import './App.css';\r\nimport NavBar from './Component/NavBar/NavBar';\r\nimport Route from './Router/Routes';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Router\\Routes.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\NavBar\\NavBar.js",["97","98","99","100","101"],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Home\\Home.js",["102","103","104","105"],"import React, { useEffect, useState } from 'react';\r\nimport './Home.scss';\r\nimport Parallax from 'react-rellax';\r\nimport HeadingMouseover from '../../Component/Heading_mouseover/HeadingMouseover';\r\nimport ToothMouseover from '../../Component/Tooth_mouseover/ToothMouseover';\r\nimport Testing from '../../Component/testing/Testing';\r\nimport HeadingMouseoverMobile from '../../Component/Heading_mouseover_mobile/HeadingMouseover_mobile';\r\nimport ToothMouseoverMobile from '../../Component/Tooth_mouseover_mobile/ToothMouseover_mobile';\r\nimport Lefthand from '../../assets/left.png';\r\nimport Righthand from '../../assets/2.png';\r\nimport Visit from '../Visit/Visit';\r\nimport NavBar from '../../Component/NavBar/NavBar';\r\n\r\nexport default function Home() {\r\n    const [offsetx,setOffsetx] = useState(0);\r\n    const handlescroll = () => setOffsetx(window.pageYOffset);\r\n    useEffect(() => {\r\n        window.addEventListener('scroll',handlescroll);\r\n        return () => window.removeEventListener('scroll',handlescroll);\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <section>\r\n                <NavBar />\r\n                <div className=\"sky\">\r\n                    <div className=\"sky_top\"></div>\r\n                    <div className=\"sky_bottom\"></div>\r\n                </div>           \r\n                <div className=\"mouseover_animation\">\r\n                    <HeadingMouseover />\r\n                    <ToothMouseover />\r\n                </div>\r\n                <div className=\"mouseover_animation_mobile\">\r\n                    <HeadingMouseoverMobile />\r\n                    <ToothMouseoverMobile /> \r\n                </div>\r\n                <div className=\"hand_animation\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\" id=\"left_hand\">\r\n                            <img src={Lefthand} style={{ transform : `translateX(${offsetx * 0.2}px)`}}  />\r\n                        </div>\r\n                        <div className=\"col-6\" id=\"right_hand\">\r\n                            <img src={Righthand} style={{ transform : `translateX(-${offsetx * 0.2}px)`}} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </section>\r\n            <Visit />\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Expert\\Expert.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\About\\About.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Buzz\\Buzz.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Experience\\Experience.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\Visit\\Visit.js",["106","107","108"],"import React, { useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport Scaling from '../../assets/Scaling.png';\r\nimport Root_Canal from '../../assets/root canal.png';\r\nimport Paediatric_Dentistry from '../../assets/Paediatric Dentistry.png';\r\nimport Oral_Maxillofacial_Surgery from '../../assets/Oral.png';\r\nimport Laser_curetage from '../../assets/Laser curetage.png';\r\nimport Gum_infection from '../../assets/Gum infection.png';\r\nimport Flap_surgery from '../../assets/Flap surgery.png';\r\nimport dental_implants from '../../assets/dental implants.png';\r\nimport Dental_Bridges from '../../assets/Dental Bridges.png';\r\nimport Crowns from '../../assets/Crowns.png';\r\nimport Complete_Denture from '../../assets/Complete Denture.png';\r\nimport ceramic_brames from '../../assets/ceramic brames.png';\r\nimport Bleeding_gums from '../../assets/Bleeding gums.png';\r\nimport X_rays from '../../assets/X rays 1.png';\r\nimport Veneer from '../../assets/Veneer.png';\r\nimport Tooth_removal from '../../assets/Tooth removal.png';\r\nimport Tooth_Jewellery from '../../assets/Tooth Jewellery.png';\r\nimport Self_ligating_braces from '../../assets/Self-ligating braces.png';\r\nimport './Visit.scss';\r\n\r\nexport default function Visit() {\r\n    const NextArrow = ({ onClick }) => {\r\n        return (\r\n            <div className=\"arrows next_button\" onClick={onClick} style={{ marginTop: '-300px', marginLeft: '10px' }}>\r\n                <button style={{ outline: 'none' }} type=\"submit\" className=\"previous2 round2\">\r\n                    &#8250;\r\n              </button>\r\n                {/* <h1>Next</h1> */}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const PrevArrow = ({ onClick }) => {\r\n        return (\r\n            <div className=\"arrows prev_button\" onClick={onClick} style={{ marginTop: '-300px', marginLeft: '10px' }}>\r\n                <button style={{ outline: 'none' }} type=\"submit\" className=\"previous1 round1\">\r\n                    &#8249;\r\n              </button>\r\n                {/* <h1>Prev</h1> */}\r\n            </div>\r\n        );\r\n    };\r\n    const images1=[{ pics: Scaling, heading: 'Scaling' },\r\n                     { pics: Root_Canal, heading: 'Root Canal'},\r\n                    {pics:Paediatric_Dentistry, heading: 'Paediatric Dentistry'},\r\n                    {pics: Laser_curetage,heading: 'Laser Curetage' },\r\n                    {pics:Gum_infection,heading: 'Gum Infection'},\r\n                    {pics: Flap_surgery,heading: 'Flap Surgery' },\r\n                    {pics: dental_implants, heading: 'Dental Implants' },\r\n                ]\r\n    \r\n    const images = [{ pics: Scaling, heading: 'Scaling' }, { pics: Root_Canal, heading: 'Root Canal' }, Paediatric_Dentistry,\r\n        Laser_curetage,\r\n        Gum_infection,\r\n        Flap_surgery,\r\n        dental_implants,\r\n        Dental_Bridges,\r\n        Crowns,\r\n        Complete_Denture,\r\n        ceramic_brames,\r\n        Bleeding_gums,\r\n        X_rays,\r\n        Veneer,\r\n        Tooth_removal,\r\n        Tooth_Jewellery,\r\n        Self_ligating_braces,\r\n        Oral_Maxillofacial_Surgery,];\r\n    const data = [{ heading: 'Scaling' },\r\n    { heading: 'Root Canal' },\r\n    { heading: 'Paediatric Dentistry' },\r\n    { heading: 'Laser Curetage' },\r\n    { heading: 'Gum Infection' },\r\n    { heading: 'Flap Surgery' },\r\n    { heading: 'Dental Implants' },\r\n    { heading: 'Dental Bridges' },\r\n    { heading: 'Crowns' },\r\n    { heading: 'Complete Denture' },\r\n    { heading: 'Ceramic Brames' },\r\n    { heading: 'Bleeding Gums' },\r\n    { heading: 'X rays' },\r\n    { heading: 'Veneer' },\r\n    { heading: 'Tooth Removal' },\r\n    { heading: 'Tooth Jewellery' },\r\n    { heading: 'Self-ligating Braces' },\r\n    { heading: 'Oral & Maxillofacial Surgery' }]\r\n    const [imageIndex, setImageIndex] = useState(0);\r\n    const settings = {\r\n        infinite: true,\r\n        lazyLoad: true,\r\n        speed: 300,\r\n        slidesToShow: 4,\r\n        centerMode: false,\r\n        centerPadding: 0,\r\n        nextArrow: <NextArrow />,\r\n        prevArrow: <PrevArrow />,\r\n        beforeChange: (current, next) => setImageIndex(next),\r\n    };\r\n    return (\r\n        <div>\r\n            <div className=\"onevisit\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 text1 col-12\" data-aos=\"fade-up\" data-aos-duration=\"1000\" data-aos-delay=\"900\">\r\n                        <h1>The first in Karnataka to implement One-Visit Dentistry</h1>\r\n                        <p>We are one of the first in the nation to adopt one-day dentistry through CEREC (Chairside Economical Restoration of Esthetic Ceramics, the ultimate in digital dentistry technology.</p>\r\n\r\n                    </div>\r\n                    <div className=\"col-md-6 col-12\">\r\n                        <div className=\"background\" data-aos=\"fade-left\" data-aos-duration=\"1000\" data-aos-delay=\"100\"></div>\r\n                        <div className=\"image_1\" data-aos=\"fade-left\" data-aos-duration=\"1000\" data-aos-delay=\"600\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"treatment\">\r\n                    <h1 className=\"treatments text-center\" style={{ fontFamily: 'si-ui-bold' }}>TREATMENTS</h1>\r\n                </div> */}\r\n                <div className=\"carousel_onevisit col-12\">\r\n                    <Slider {...settings}>\r\n                        {images1.map((img, idx) => (\r\n                            <div className={idx === imageIndex ? \"slides activeSlides\" : \"slides\"}>\r\n                                <div className=\"patch\">\r\n                                    <h1>{img.heading}</h1>\r\n                                    <p>from traditional braces to invisible alignes get the best alignment</p>\r\n                                    <button className=\"btn btn-primary\" style={{ fontFamily: 'si-ui-light', letterSpacing: '2px' }}>Explore</button>\r\n                                </div>\r\n                                <img className=\"pics\" src={img.pics}  />\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n\r\n                </div>\r\n                <div class=\"three-dots\">\r\n                        <span class=\"second\"></span>\r\n                        <span class=\"second\"></span>\r\n                        <span class=\"first\"></span>\r\n                        <span class=\"first\"></span>\r\n                        <span class=\"first\"></span>\r\n                        <span class=\"first\"></span>\r\n                        <span class=\"first\"></span>\r\n                        <span class=\"first\"></span>\r\n\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Footer\\Footer.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\ScheduleVisit\\ScheduleVisit.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Tooth_mouseover\\ToothMouseover.js",["109","110"],"import React, { useState, useEffect } from 'react';\r\nimport './ToothMouseover.scss';\r\nimport Tooth from '../../assets/6.png';\r\nimport Blue_Tooth from '../../assets/5.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function ToothMouseover() {\r\n    useEffect(() => {\r\n        tooth();\r\n    })\r\n    function tooth() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n\r\n        const svgElement = document.getElementById('tooth');\r\n        const maskedElement = document.querySelector('#mask-circle');\r\n        const circleFeedback = document.querySelector('#circle-shadow');\r\n        const svgPoint = svgElement.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement.setAttribute('cx', svgCoords.x);\r\n            maskedElement.setAttribute('cy', svgCoords.y);\r\n            circleFeedback.setAttribute('cx', svgCoords.x);\r\n            circleFeedback.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scro = window.pageYOffset + e.clientY;\r\n            const scroX = window.pageYOffset + e.clientX;\r\n            // console.log(scroX);\r\n\r\n            if (scro > 500) {\r\n                update(cursorPoint(e, svgElement));\r\n                document.getElementById('circle-shadow').style.display = 'block';\r\n                document.getElementById('mask-circle').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow').style.display = 'none';\r\n                document.getElementById('mask-circle').style.display = 'none';\r\n            }\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Parallax speed={4}>\r\n                <svg id=\"tooth\">\r\n                    {/* <rect width=\"100%\" height=\"100%\" fill=\"pink\" \r\n                        fillOpacity=\"0\"\r\n                         /> */}\r\n                    <image x=\"400\" xlinkHref={Tooth} width=\"600\" height=\"600\" />\r\n                </svg>\r\n\r\n                <svg id=\"tooth\">\r\n                    <defs>\r\n                        <clipPath id=\"mask\">\r\n                            <circle id=\"mask-circle\" cx=\"50%\" cy=\"50%\" r=\"12%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"14%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask)\">\r\n                        {/* <rect width=\"100%\" height=\"100%\" fill=\"#272730\" /> */}\r\n                        <image x=\"400\" xlinkHref={Blue_Tooth} width=\"600\" height=\"600\" />\r\n                    </g>\r\n\r\n                    <circle id=\"circle-shadow\" cx=\"50%\" cy=\"50%\" r=\"14%\" filter='url(#this_image)' style={{ stroke: '#fff', strokeWidth: '5' }} />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\testing\\Testing.js",[],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Heading_mouseover\\HeadingMouseover.js",["111"],"import React, { useState, useEffect } from 'react';\r\nimport './HeadingMouseover.scss';\r\nimport heading1 from '../../assets/Group 553.png';\r\nimport heading2 from '../../assets/Group 678.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function HeadingMouseover() {\r\n    useEffect(() => {\r\n        heading();\r\n    })\r\n\r\n\r\n    function heading() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n        const svgElement1 = document.getElementById('animation_heading');\r\n        const maskedElement1 = document.querySelector('#mask-circle_heading');\r\n        const circleFeedback1 = document.querySelector('#circle-shadow_heading');\r\n        const svgPoint = svgElement1.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement1.setAttribute('cx', svgCoords.x);\r\n            maskedElement1.setAttribute('cy', svgCoords.y);\r\n            circleFeedback1.setAttribute('cx', svgCoords.x);\r\n            circleFeedback1.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scrol = window.pageYOffset + e.clientY;\r\n           \r\n            if (scrol>250 && scrol<450) {\r\n                update(cursorPoint(e, svgElement1));\r\n                document.getElementById('circle-shadow_heading').style.display = 'block';\r\n                document.getElementById('mask-circle_heading').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow_heading').style.display = 'none';\r\n                document.getElementById('mask-circle_heading').style.display = 'none';\r\n            }\r\n\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement1));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Parallax speed={-3}>\r\n                <svg className=\"heading_image\" id=\"animation_heading\">\r\n                    <rect width=\"100%\" height=\"100%\" fill=\"yellow\"\r\n                        fillOpacity=\"0\"\r\n                    />\r\n                    <image x='200' y='0' xlinkHref={heading1} width=\"1000\" height=\"1000\" />\r\n                </svg>\r\n                <svg className=\"heading_image\" id=\"animation_heading\">\r\n                    <defs>\r\n                        <clipPath id=\"mask1\">\r\n                            <circle id=\"mask-circle_heading\" cx=\"50%\" cy=\"50%\" r=\"10%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image_heading\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"11%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask1)\">\r\n                        <rect width=\"100%\" height=\"100%\" fill=\"#175C64\" />\r\n                        <image x='200' xlinkHref={heading2} width=\"1000\" height=\"1000\" />\r\n                    </g>\r\n                    <circle id=\"circle-shadow_heading\" cx=\"50%\" cy=\"50%\" r=\"11%\" filter=\"url(#this_image_heading)\" />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Heading_mouseover_mobile\\HeadingMouseover_mobile.js",["112"],"import React, { useState, useEffect } from 'react';\r\nimport './HeadingMouseover_mobile.scss';\r\nimport heading1 from '../../assets/mobile_text.png';\r\nimport heading2 from '../../assets/mobile_text_2.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function HeadingMouseoverMobile() {\r\n    useEffect(() => {\r\n        heading();\r\n    })\r\n\r\n\r\n    function heading() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n        const svgElement1 = document.getElementById('animation_heading_mobile');\r\n        const maskedElement1 = document.querySelector('#mask-circle_heading_mobile');\r\n        const circleFeedback1 = document.querySelector('#circle-shadow_heading_mobile');\r\n        const svgPoint = svgElement1.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement1.setAttribute('cx', svgCoords.x);\r\n            maskedElement1.setAttribute('cy', svgCoords.y);\r\n            circleFeedback1.setAttribute('cx', svgCoords.x);\r\n            circleFeedback1.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scrol = window.pageYOffset + e.clientY;\r\n            if (scrol > 130 && scrol < 200) {\r\n                update(cursorPoint(e, svgElement1));\r\n                document.getElementById('circle-shadow_heading_mobile').style.display = 'block';\r\n                document.getElementById('mask-circle_heading_mobile').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow_heading_mobile').style.display = 'none';\r\n                document.getElementById('mask-circle_heading_mobile').style.display = 'none';\r\n            }\r\n\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement1));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Parallax speed={-4}>\r\n                <svg className=\"heading_image_mobile\" id=\"animation_heading_mobile\">\r\n                    <rect width=\"100%\" height=\"100%\" fill=\"yellow\"\r\n                        fillOpacity=\"0\"\r\n                    />\r\n                    <image x='35' xlinkHref={heading1} width=\"300\" height=\"300\" />\r\n                </svg>\r\n                <svg className=\"heading_image_mobile\" id=\"animation_heading_mobile\">\r\n                    <defs>\r\n                        <clipPath id=\"mask1_mobile\">\r\n                            <circle id=\"mask-circle_heading_mobile\" cx=\"50%\" cy=\"50%\" r=\"5%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image_heading_mobile\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"6%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask1_mobile)\">\r\n                        <rect width=\"100%\" height=\"100%\" fill=\"#175C64\" />\r\n                        <image x='35' xlinkHref={heading2} width=\"300\" height=\"300\" />\r\n                    </g>\r\n                    <circle id=\"circle-shadow_heading_mobile\" cx=\"50%\" cy=\"50%\" r=\"6%\" filter=\"url(#this_image_heading_mobile)\" />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Tooth_mouseover_mobile\\ToothMouseover_mobile.js",["113"],"import React, { useState, useEffect } from 'react';\r\nimport './ToothMouseover_mobile.scss';\r\nimport Tooth from '../../assets/6.png';\r\nimport Blue_Tooth from '../../assets/5.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function ToothMouseoverMobile() {\r\n    useEffect(() => {\r\n        tooth();\r\n    })\r\n    function tooth() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n\r\n        const svgElement = document.getElementById('tooth_mobile');\r\n        const maskedElement = document.querySelector('#mask-circle_mobile');\r\n        const circleFeedback = document.querySelector('#circle-shadow_mobile');\r\n        const svgPoint = svgElement.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement.setAttribute('cx', svgCoords.x);\r\n            maskedElement.setAttribute('cy', svgCoords.y);\r\n            circleFeedback.setAttribute('cx', svgCoords.x);\r\n            circleFeedback.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scro = window.pageYOffset + e.clientY;\r\n            // console.log(scro);\r\n\r\n            if (scro > 280 && scro < 730) {\r\n                update(cursorPoint(e, svgElement));\r\n                document.getElementById('circle-shadow_mobile').style.display = 'block';\r\n                document.getElementById('mask-circle_mobile').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow_mobile').style.display = 'none';\r\n                document.getElementById('mask-circle_mobile').style.display = 'none';\r\n            }\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div style={{ alignContent: 'center' }} >\r\n            <Parallax speed={4}>\r\n                <svg id=\"tooth_mobile\">\r\n                    {/* <rect width=\"100%\" height=\"100%\" fill=\"pink\" \r\n                        fillOpacity=\"0\"\r\n                         /> */}\r\n                    <image x='10' xlinkHref={Tooth} width=\"340\" height=\"340\" />\r\n                </svg>\r\n\r\n                <svg id=\"tooth_mobile\">\r\n                    <defs>\r\n                        <clipPath id=\"mask_mobile\">\r\n                            <circle id=\"mask-circle_mobile\" cx=\"50%\" cy=\"50%\" r=\"12%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image_mobile\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"14%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask_mobile)\">\r\n                        {/* <rect width=\"100%\" height=\"100%\" fill=\"#272730\" /> */}\r\n                        <image xlinkHref={Blue_Tooth} width=\"340\" height=\"340\" />\r\n                    </g>\r\n\r\n                    <circle id=\"circle-shadow_mobile\" cx=\"50%\" cy=\"50%\" r=\"14%\" filter='url(#this_image_mobile)' style={{ stroke: '#fff', strokeWidth: '5' }} />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\servicesPage\\services.js",["114","115"],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Pages\\servicesPage\\header\\header.js",["116"],"C:\\Users\\bhara\\Desktop\\Dentist_2\\Dentist\\src\\Component\\Carousel_show2\\CarouselShow2.js",["117","118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"127","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"128","line":8,"column":18,"nodeType":"125","messageId":"126","endLine":8,"endColumn":25},{"ruleId":"129","severity":1,"message":"130","line":15,"column":21,"nodeType":"131","endLine":15,"endColumn":58},{"ruleId":"132","severity":1,"message":"133","line":16,"column":25,"nodeType":"131","endLine":16,"endColumn":66},{"ruleId":"132","severity":1,"message":"133","line":17,"column":25,"nodeType":"131","endLine":17,"endColumn":79},{"ruleId":"123","severity":1,"message":"134","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":16},{"ruleId":"123","severity":1,"message":"135","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":41,"column":29,"nodeType":"131","endLine":41,"endColumn":108},{"ruleId":"132","severity":1,"message":"133","line":44,"column":29,"nodeType":"131","endLine":44,"endColumn":109},{"ruleId":"123","severity":1,"message":"136","line":54,"column":11,"nodeType":"125","messageId":"126","endLine":54,"endColumn":17},{"ruleId":"123","severity":1,"message":"137","line":70,"column":11,"nodeType":"125","messageId":"126","endLine":70,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":127,"column":33,"nodeType":"131","endLine":127,"endColumn":73},{"ruleId":"123","severity":1,"message":"138","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"139","line":37,"column":19,"nodeType":"125","messageId":"126","endLine":37,"endColumn":24},{"ruleId":"123","severity":1,"message":"138","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"138","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"138","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"140","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":25,"column":15,"nodeType":"131","endLine":25,"endColumn":38},{"ruleId":"132","severity":1,"message":"133","line":8,"column":7,"nodeType":"131","endLine":8,"endColumn":25},{"ruleId":"123","severity":1,"message":"141","line":19,"column":11,"nodeType":"125","messageId":"126","endLine":19,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":46,"column":33,"nodeType":"131","endLine":46,"endColumn":50},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'openNav' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Parallax' is defined but never used.","'Testing' is defined but never used.","'images' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'scroX' is assigned a value but never used.","'CarouselShow2' is defined but never used.","'PrevArrow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]