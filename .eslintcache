[{"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\index.js":"1","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\App.js":"2","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\reportWebVitals.js":"3","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\NavBar\\NavBar.js":"4","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Router\\Routes.js":"5","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\About\\About.js":"6","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Experience\\Experience.js":"7","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Expert\\Expert.js":"8","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Buzz\\Buzz.js":"9","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Visit\\Visit.js":"10","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Home\\Home.js":"11","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Footer\\Footer.js":"12","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\ScheduleVisit\\ScheduleVisit.js":"13","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Tooth_mouseover_mobile\\ToothMouseover_mobile.js":"14","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Tooth_mouseover\\ToothMouseover.js":"15","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Heading_mouseover_mobile\\HeadingMouseover_mobile.js":"16","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\testing\\Testing.js":"17","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Heading_mouseover\\HeadingMouseover.js":"18","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\servicesPage\\services.js":"19","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\servicesPage\\header\\header.js":"20","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Carousel_show2\\CarouselShow2.js":"21","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\OurExpert\\OurExpert.js":"22","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Carousel_show3\\CarouselShow3.js":"23"},{"size":1036,"mtime":1607934121322,"results":"24","hashOfConfig":"25"},{"size":280,"mtime":1608026400691,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":2919,"mtime":1608117540365,"results":"28","hashOfConfig":"25"},{"size":1131,"mtime":1608193194016,"results":"29","hashOfConfig":"25"},{"size":7628,"mtime":1608193193933,"results":"30","hashOfConfig":"25"},{"size":3069,"mtime":1608022396198,"results":"31","hashOfConfig":"25"},{"size":6322,"mtime":1608200595814,"results":"32","hashOfConfig":"25"},{"size":144,"mtime":1607927816627,"results":"33","hashOfConfig":"25"},{"size":6862,"mtime":1608193193953,"results":"34","hashOfConfig":"25"},{"size":2268,"mtime":1608026400834,"results":"35","hashOfConfig":"25"},{"size":2159,"mtime":1607953711331,"results":"36","hashOfConfig":"25"},{"size":2667,"mtime":1607965638669,"results":"37","hashOfConfig":"25"},{"size":3794,"mtime":1608117540365,"results":"38","hashOfConfig":"25"},{"size":3695,"mtime":1608117540365,"results":"39","hashOfConfig":"25"},{"size":3890,"mtime":1608117540365,"results":"40","hashOfConfig":"25"},{"size":860,"mtime":1608026400808,"results":"41","hashOfConfig":"25"},{"size":3776,"mtime":1608117540365,"results":"42","hashOfConfig":"25"},{"size":2554,"mtime":1608193193955,"results":"43","hashOfConfig":"25"},{"size":247,"mtime":1608117540402,"results":"44","hashOfConfig":"25"},{"size":3447,"mtime":1608193193877,"results":"45","hashOfConfig":"25"},{"size":2844,"mtime":1608187937643,"results":"46","hashOfConfig":"25"},{"size":2017,"mtime":1608193193904,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1t3yl96",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\index.js",[],["102","103"],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\App.js",["104"],"import './App.css';\r\nimport NavBar from './Component/NavBar/NavBar';\r\nimport Route from './Router/Routes';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route/>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\reportWebVitals.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\NavBar\\NavBar.js",["105","106","107","108","109"],"import React, { useEffect } from 'react';\r\nimport '../NavBar/NavBar.scss';\r\nimport logo from '../../assets/logo_main.png';\r\nimport mobilelogo from '../../assets/sinewave-content.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport default function NavBar() {\r\n        function openNav() {\r\n            document.getElementById(\"mySidepanel\").style.width = \"250px\";\r\n          }\r\n    return (\r\n        <div className='NavBar-container'>\r\n            <nav className=\"navbar-light navbar navbar-expand-lg\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <img src ={logo} className='NavBar-logo'></img>\r\n                        <img src ={mobilelogo} className='NavBar-mobile-logo'></img>\r\n                    </a>\r\n                    <button className=\"navbar-toggler order-first\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"> </span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n                        <ul className=\"me-5 navbar-nav mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to=\"/experience\" className=\"nav-link\">EXPERIENCE DENTISTRY</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to='/expert' className='nav-link'>OUR EXPERTS</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to='/treatment' className='nav-link'>TREATMENTS</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to='/buzz' className='nav-link'>BUZZ</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to='/about' className='nav-link'>ABOUT</NavLink>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <NavLink exact to='/visit' className='nav-link'>SCHEDULE A VISIT</NavLink>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className='Nav-icons'>\r\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                        <i className=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>\r\n                        <i className=\"fa fa-user-circle-o\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Router\\Routes.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\About\\About.js",["110","111"],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Experience\\Experience.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Expert\\Expert.js",["112","113"],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Buzz\\Buzz.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Visit\\Visit.js",["114","115","116"],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\Home\\Home.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Footer\\Footer.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\ScheduleVisit\\ScheduleVisit.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Tooth_mouseover_mobile\\ToothMouseover_mobile.js",["117"],"import React, { useState, useEffect } from 'react';\r\nimport './ToothMouseover_mobile.scss';\r\nimport Tooth from '../../assets/6.png';\r\nimport Blue_Tooth from '../../assets/5.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function ToothMouseoverMobile() {\r\n    useEffect(() => {\r\n        tooth();\r\n    })\r\n    function tooth() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n\r\n        const svgElement = document.getElementById('tooth_mobile');\r\n        const maskedElement = document.querySelector('#mask-circle_mobile');\r\n        const circleFeedback = document.querySelector('#circle-shadow_mobile');\r\n        const svgPoint = svgElement.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement.setAttribute('cx', svgCoords.x);\r\n            maskedElement.setAttribute('cy', svgCoords.y);\r\n            circleFeedback.setAttribute('cx', svgCoords.x);\r\n            circleFeedback.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scro = window.pageYOffset + e.clientY;\r\n            console.log(scro);\r\n\r\n            if (scro > 280 && scro < 730) {\r\n                update(cursorPoint(e, svgElement));\r\n                document.getElementById('circle-shadow_mobile').style.display = 'block';\r\n                document.getElementById('mask-circle_mobile').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow_mobile').style.display = 'none';\r\n                document.getElementById('mask-circle_mobile').style.display = 'none';\r\n            }\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div style={{ alignContent: 'center' }} >\r\n            <Parallax speed={4}>\r\n                <svg id=\"tooth_mobile\">\r\n                    {/* <rect width=\"100%\" height=\"100%\" fill=\"pink\" \r\n                        fillOpacity=\"0\"\r\n                         /> */}\r\n                    <image x='10' xlinkHref={Tooth} width=\"340\" height=\"340\" />\r\n                </svg>\r\n\r\n                <svg id=\"tooth_mobile\">\r\n                    <defs>\r\n                        <clipPath id=\"mask_mobile\">\r\n                            <circle id=\"mask-circle_mobile\" cx=\"50%\" cy=\"50%\" r=\"12%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image_mobile\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"14%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask_mobile)\">\r\n                        {/* <rect width=\"100%\" height=\"100%\" fill=\"#272730\" /> */}\r\n                        <image xlinkHref={Blue_Tooth} width=\"340\" height=\"340\" />\r\n                    </g>\r\n\r\n                    <circle id=\"circle-shadow_mobile\" cx=\"50%\" cy=\"50%\" r=\"14%\" filter='url(#this_image_mobile)' style={{ stroke: '#fff', strokeWidth: '5' }} />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Tooth_mouseover\\ToothMouseover.js",["118"],"import React, { useState, useEffect } from 'react';\r\nimport './ToothMouseover.scss';\r\nimport Tooth from '../../assets/6.png';\r\nimport Blue_Tooth from '../../assets/5.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function ToothMouseover() {\r\n    useEffect(() => {\r\n        tooth();\r\n    })\r\n    function tooth() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n\r\n        const svgElement = document.getElementById('tooth');\r\n        const maskedElement = document.querySelector('#mask-circle');\r\n        const circleFeedback = document.querySelector('#circle-shadow');\r\n        const svgPoint = svgElement.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement.setAttribute('cx', svgCoords.x);\r\n            maskedElement.setAttribute('cy', svgCoords.y);\r\n            circleFeedback.setAttribute('cx', svgCoords.x);\r\n            circleFeedback.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scro = window.pageYOffset + e.clientY;\r\n            const scroX = window.pageYOffset + e.clientX;\r\n            console.log(scroX);\r\n\r\n            if (scro > 430 && scroX < 1396 && scroX > 400) {\r\n                update(cursorPoint(e, svgElement));\r\n                document.getElementById('circle-shadow').style.display = 'block';\r\n                document.getElementById('mask-circle').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow').style.display = 'none';\r\n                document.getElementById('mask-circle').style.display = 'none';\r\n            }\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Parallax speed={4}>\r\n                <svg id=\"tooth\">\r\n                    {/* <rect width=\"100%\" height=\"100%\" fill=\"pink\" \r\n                        fillOpacity=\"0\"\r\n                         /> */}\r\n                    <image x=\"400\" xlinkHref={Tooth} width=\"600\" height=\"600\" />\r\n                </svg>\r\n\r\n                <svg id=\"tooth\">\r\n                    <defs>\r\n                        <clipPath id=\"mask\">\r\n                            <circle id=\"mask-circle\" cx=\"50%\" cy=\"50%\" r=\"12%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"14%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask)\">\r\n                        {/* <rect width=\"100%\" height=\"100%\" fill=\"#272730\" /> */}\r\n                        <image x=\"400\" xlinkHref={Blue_Tooth} width=\"600\" height=\"600\" />\r\n                    </g>\r\n\r\n                    <circle id=\"circle-shadow\" cx=\"50%\" cy=\"50%\" r=\"14%\" filter='url(#this_image)' style={{ stroke: '#fff', strokeWidth: '5' }} />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Heading_mouseover_mobile\\HeadingMouseover_mobile.js",["119"],"import React, { useState, useEffect } from 'react';\r\nimport './HeadingMouseover_mobile.scss';\r\nimport heading1 from '../../assets/mobile_text.png';\r\nimport heading2 from '../../assets/mobile_text_2.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function HeadingMouseoverMobile() {\r\n    useEffect(() => {\r\n        heading();\r\n    })\r\n\r\n\r\n    function heading() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n        const svgElement1 = document.getElementById('animation_heading_mobile');\r\n        const maskedElement1 = document.querySelector('#mask-circle_heading_mobile');\r\n        const circleFeedback1 = document.querySelector('#circle-shadow_heading_mobile');\r\n        const svgPoint = svgElement1.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement1.setAttribute('cx', svgCoords.x);\r\n            maskedElement1.setAttribute('cy', svgCoords.y);\r\n            circleFeedback1.setAttribute('cx', svgCoords.x);\r\n            circleFeedback1.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scrol = window.pageYOffset + e.clientY;\r\n            if (scrol > 130 && scrol < 200) {\r\n                update(cursorPoint(e, svgElement1));\r\n                document.getElementById('circle-shadow_heading_mobile').style.display = 'block';\r\n                document.getElementById('mask-circle_heading_mobile').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow_heading_mobile').style.display = 'none';\r\n                document.getElementById('mask-circle_heading_mobile').style.display = 'none';\r\n            }\r\n\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement1));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Parallax speed={-4}>\r\n                <svg className=\"heading_image_mobile\" id=\"animation_heading_mobile\">\r\n                    <rect width=\"100%\" height=\"100%\" fill=\"yellow\"\r\n                        fillOpacity=\"0\"\r\n                    />\r\n                    <image xlinkHref={heading1} width=\"380\" height=\"380\" />\r\n                </svg>\r\n                <svg className=\"heading_image_mobile\" id=\"animation_heading_mobile\">\r\n                    <defs>\r\n                        <clipPath id=\"mask1_mobile\">\r\n                            <circle id=\"mask-circle_heading_mobile\" cx=\"50%\" cy=\"50%\" r=\"5%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image_heading_mobile\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"6%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask1_mobile)\">\r\n                        <rect width=\"100%\" height=\"100%\" fill=\"#175C64\" />\r\n                        <image xlinkHref={heading2} width=\"380\" height=\"380\" />\r\n                    </g>\r\n                    <circle id=\"circle-shadow_heading_mobile\" cx=\"50%\" cy=\"50%\" r=\"6%\" filter=\"url(#this_image_heading_mobile)\" />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\testing\\Testing.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Heading_mouseover\\HeadingMouseover.js",["120"],"import React, { useState, useEffect } from 'react';\r\nimport './HeadingMouseover.scss';\r\nimport heading1 from '../../assets/Group 553.png';\r\nimport heading2 from '../../assets/Group 678.png';\r\nimport Ring from '../../assets/Group 679.png';\r\nimport Parallax from 'react-rellax';\r\n\r\nexport default function HeadingMouseover() {\r\n    useEffect(() => {\r\n        heading();\r\n    })\r\n\r\n\r\n    function heading() {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        // tslint:disable-next-line:prefer-const\r\n        const svgElement1 = document.getElementById('animation_heading');\r\n        const maskedElement1 = document.querySelector('#mask-circle_heading');\r\n        const circleFeedback1 = document.querySelector('#circle-shadow_heading');\r\n        const svgPoint = svgElement1.createSVGPoint();\r\n        // tslint:disable-next-line:typedef\r\n        function cursorPoint(e, svg) {\r\n            svgPoint.x = e.clientX;\r\n            svgPoint.y = e.clientY;\r\n            return svgPoint.matrixTransform(svg.getScreenCTM().inverse());\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        function update(svgCoords) {\r\n            maskedElement1.setAttribute('cx', svgCoords.x);\r\n            maskedElement1.setAttribute('cy', svgCoords.y);\r\n            circleFeedback1.setAttribute('cx', svgCoords.x);\r\n            circleFeedback1.setAttribute('cy', svgCoords.y);\r\n        }\r\n        // tslint:disable-next-line:typedef\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        window.addEventListener('mousemove', (e) => {\r\n            const scrol = window.pageYOffset + e.clientY;\r\n            if (scrol > 210 && scrol < 330) {\r\n                update(cursorPoint(e, svgElement1));\r\n                document.getElementById('circle-shadow_heading').style.display = 'block';\r\n                document.getElementById('mask-circle_heading').style.display = 'block';\r\n            } else {\r\n                document.getElementById('circle-shadow_heading').style.display = 'none';\r\n                document.getElementById('mask-circle_heading').style.display = 'none';\r\n            }\r\n\r\n\r\n        }, false);\r\n        document.addEventListener('touchmove', (e) => {\r\n            e.preventDefault();\r\n            const touch = e.targetTouches[0];\r\n            if (touch) {\r\n                update(cursorPoint(touch, svgElement1));\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Parallax speed={-3}>\r\n                <svg className=\"heading_image\" id=\"animation_heading\">\r\n                    <rect width=\"100%\" height=\"100%\" fill=\"yellow\"\r\n                        fillOpacity=\"0\"\r\n                    />\r\n                    <image x='200' y='0' xlinkHref={heading1} width=\"1000\" height=\"1000\" />\r\n                </svg>\r\n                <svg className=\"heading_image\" id=\"animation_heading\">\r\n                    <defs>\r\n                        <clipPath id=\"mask1\">\r\n                            <circle id=\"mask-circle_heading\" cx=\"50%\" cy=\"50%\" r=\"10%\" style={{ fill: '#ffffff' }} />\r\n                        </clipPath>\r\n                        <filter id=\"this_image_heading\" x=\"0%\" y=\"0%\" width=\"100%\" height=\"100%\">\r\n                            <feImage cx=\"50%\" cy=\"50%\" r=\"11%\" xlinkHref={Ring} />\r\n                        </filter>\r\n                    </defs>\r\n                    <g clipPath=\"url(#mask1)\">\r\n                        <rect width=\"100%\" height=\"100%\" fill=\"#175C64\" />\r\n                        <image x='200' xlinkHref={heading2} width=\"1000\" height=\"1000\" />\r\n                    </g>\r\n                    <circle id=\"circle-shadow_heading\" cx=\"50%\" cy=\"50%\" r=\"11%\" filter=\"url(#this_image_heading)\" />\r\n                </svg>\r\n            </Parallax>\r\n        </div>\r\n    );\r\n}","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\servicesPage\\services.js",["121","122"],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\servicesPage\\header\\header.js",["123"],"import React from 'react';\r\nimport './header.scss'\r\nimport logo from '../../../assets/logo_main.png';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header_image\">\r\n      <img src={logo} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Carousel_show2\\CarouselShow2.js",[],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Pages\\OurExpert\\OurExpert.js",["124"],"C:\\Users\\GOPAL PC\\OneDrive\\Desktop\\Webknot-Projects\\Dentist\\dentist-site\\src\\Component\\Carousel_show3\\CarouselShow3.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":26},{"ruleId":"129","severity":1,"message":"134","line":8,"column":18,"nodeType":"131","messageId":"132","endLine":8,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":15,"column":21,"nodeType":"137","endLine":15,"endColumn":58},{"ruleId":"138","severity":1,"message":"139","line":16,"column":25,"nodeType":"137","endLine":16,"endColumn":66},{"ruleId":"138","severity":1,"message":"139","line":17,"column":25,"nodeType":"137","endLine":17,"endColumn":79},{"ruleId":"138","severity":1,"message":"139","line":21,"column":21,"nodeType":"137","endLine":21,"endColumn":41},{"ruleId":"138","severity":1,"message":"139","line":39,"column":21,"nodeType":"137","endLine":39,"endColumn":41},{"ruleId":"140","severity":1,"message":"141","line":41,"column":29,"nodeType":"137","endLine":41,"endColumn":94},{"ruleId":"140","severity":1,"message":"141","line":64,"column":29,"nodeType":"137","endLine":64,"endColumn":94},{"ruleId":"129","severity":1,"message":"142","line":54,"column":11,"nodeType":"131","messageId":"132","endLine":54,"endColumn":17},{"ruleId":"129","severity":1,"message":"143","line":70,"column":11,"nodeType":"131","messageId":"132","endLine":70,"endColumn":15},{"ruleId":"138","severity":1,"message":"139","line":136,"column":33,"nodeType":"137","endLine":136,"endColumn":73},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"129","severity":1,"message":"144","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":25},{"ruleId":"138","severity":1,"message":"139","line":27,"column":15,"nodeType":"137","endLine":27,"endColumn":38},{"ruleId":"138","severity":1,"message":"139","line":45,"column":9,"nodeType":"137","endLine":45,"endColumn":56},{"ruleId":"138","severity":1,"message":"139","line":8,"column":7,"nodeType":"137","endLine":8,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":21,"column":25,"nodeType":"137","endLine":21,"endColumn":97},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'openNav' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'images' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]